'/' -> landing page offering login and signup options
'/dashboard' -> user specific home page displaying profile and 3 earliest tasks \
    dashboard must be dynamic allowing one endpoint to show different data based on the user
    TODO:
        - create middleware to validate user sessions (JWT auth), possibly implement rate limiting
        - create api gateway to orchestrate calls to different microservices
    Reasoning: 
        To make this route dynamic, tasks need to be fetched without any indications from the url path. JWT can act as the indicator and also
        ensure only authorized users can access the /dashboard route. JWTs should be generated by the login microservice on the backend after a user successfully
        logs in and stored in an HTTP cookie being sent with EVERY request. This now requires a middleware to authenticate JWTs to be implemented. It should sit
        on top of incoming frontend requests to the API gateway and deny unauthorized requests. The data such as userId being sent with JWT is now available
        at the API gateway to send to task service allowing retrieval. Once all data is aggregated at the API gateway, a response can be returned with user
        specific data.
'/tasks' -> tasks associated to user (created / assigned) limited using pagination
'/tasks/:taskId' -> specific task, different HTTP methods do different operations
'/mytasks' -> tasks created by user limited using pagination
'/mytasks/:taskId' -> specific task, different HTTP methods do different operations
'/createtask' -> create task associated to user
